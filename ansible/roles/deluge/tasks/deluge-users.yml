- name: Touch deluge auth file
  file:
    path: "{{ deluge_config_dir }}/auth"
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    mode: '0640'
    state: touch

- name: Check if there are Deluge users to be added
  lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item.name }}:{{ item.password }}:{{ item.access_level }}$"
    line: "{{ item.name }}:{{ item.password }}:{{ item.access_level }}"
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    mode: '0640'
    state: present
  check_mode: true
  register: _deluge_users_to_add
  with_items: "{{ deluge_users_to_add }}"

- name: Check if there are Deluge users to be removed
  lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item }}"
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    mode: '0640'
    state: absent
  check_mode: true
  register: _deluge_users_to_remove
  with_items: "{{ deluge_users_to_remove }}"

- name: Stop deluge when users are going to be added or removed
  service:
    name: deluged
    state: stopped
  when: _deluge_users_to_add.changed or _deluge_users_to_remove.changed

- name: Add deluge users
  lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item.name }}:{{ item.password }}:{{ item.access_level }}$"
    line: "{{ item.name }}:{{ item.password }}:{{ item.access_level }}"
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    mode: '0640'
    backup: true
    state: present
  with_items: "{{ deluge_users_to_add }}"
  notify: restart deluged

- name: Remove deluge users
  lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item }}"
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    mode: '0640'
    backup: true
    state: absent
  with_items: "{{ deluge_users_to_remove }}"
  notify: restart deluged
